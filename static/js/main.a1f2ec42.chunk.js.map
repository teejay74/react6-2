{"version":3,"sources":["component/NewNoteForm.jsx","component/Note.jsx","component/Notes.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormAddClock","props","useState","text","form","setForm","name","onChange","evt","target","value","prevForm","className","onClick","preventDefault","newNote","onFormSubmit","Note","note","id","onDelete","Notes","handleDelete","fetch","URL","method","then","getNotes","handleSbmit","headers","body","JSON","stringify","response","json","result","setState","notes","state","Fragment","this","map","item","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGe,SAASA,EAAaC,GAAQ,IAAD,EAClBC,mBAAS,CAC/BC,KAAM,KAFkC,mBACnCC,EADmC,KAC7BC,EAD6B,KAyB1C,OACE,iCACE,0HACA,0BAAUC,KAAK,OAAOC,SAvBL,SAACC,GAAS,IAAD,EACJA,EAAIC,OAApBH,EADoB,EACpBA,KAAMI,EADc,EACdA,MACdL,GAAQ,SAACM,GAAD,mBAAC,eAAmBA,GAApB,kBAA+BL,EAAOI,QAqBEA,MAAON,EAAKD,OAC1D,qBAAKS,UAAU,sBAAsBC,QAnBpB,SAACL,GAGpB,GAFAA,EAAIM,iBAEc,KAAdV,EAAKD,KAAa,CACpB,IAAMY,EAAU,CACdZ,KAAMC,EAAKD,MAGbF,EAAMe,aAAaD,GACnBV,EAAQ,CACNF,KAAM,OASR,qBC7BS,SAASc,EAAKhB,GAAQ,IAC3BiB,EAASjB,EAATiB,KAMR,OACE,sBAAKN,UAAU,kBAAf,UACE,4BAAIM,EAAKf,OACT,qBAAKS,UAAU,wBAAwBC,QAAU,WAPhC,IAACM,IAOoDD,EAAKC,GAN7ElB,EAAMmB,SAASD,IAMb,sB,ICTeE,E,kDACnB,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAqBRqB,aAAe,SAACH,GACdI,MAAM,GAAD,OAAI,EAAKC,IAAT,YAAgBL,GAAM,CACzBM,OAAQ,WAEPC,MAAK,kBAAM,EAAKC,eA1BF,EA6BnBC,YAAc,SAACb,GACbQ,MAAM,EAAKC,IAAK,CACdC,OAAQ,OACRI,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUjB,KAEpBW,MAAK,kBAAM,EAAKC,eArCF,EAwCnBA,SAAW,WACTJ,MAAM,EAAKC,KACRE,MAAK,SAACO,GAAD,OAAcA,EAASC,UAC5BR,MAAK,SAACS,GACL,EAAKC,SAAS,CAAEC,MAAOF,QA1C3B,EAAKG,MAAQ,CACXD,MAAO,IAET,EAAKb,IAAM,8CALM,E,0CAQnB,WAAU,IAAD,OACP,OACE,eAAC,IAAMe,SAAP,WACE,wCAAU,sBAAM3B,UAAU,yBAAyBC,QAAS2B,KAAKb,WAAvD,0BACV,qBAAKf,UAAU,aAAf,SACG4B,KAAKF,MAAMD,MAAMI,KAAI,SAACC,GAAD,OACpB,cAACzB,EAAD,CAAoBC,KAAMwB,EAAMtB,SAAU,EAAKE,cAApCoB,EAAKvB,SAGpB,cAAC,EAAD,CAAaH,aAAcwB,KAAKZ,mB,+BA+BtC,WACEY,KAAKb,e,GAlD0BgB,aCApB,SAASC,IACtB,OACE,qBAAKhC,UAAU,YAAf,SACE,cAAC,EAAD,MCPN,IAYeiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1f2ec42.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FormAddClock(props) {\n  const [form, setForm] = useState({\n    text: '',\n  });\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setForm((prevForm) => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (form.text !== '') {\n      const newNote = {\n        text: form.text,\n      };\n\n      props.onFormSubmit(newNote);\n      setForm({\n        text: '',\n      });\n    }\n  };\n\n  return (\n    <form>\n      <label>Добавить запись</label>\n      <textarea name='text' onChange={handleChange} value={form.text} />\n      <div className=\"material-icons send\" onClick={handleSubmit}>send</div>\n    </form>\n  );\n}\n\nFormAddClock.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Note(props) {\n  const { note } = props;\n\n  const handleDelete = (id) => {\n    props.onDelete(id);\n  };\n\n  return (\n    <div className='block-item-note'>\n      <p>{note.text}</p>\n      <div className='material-icons delete' onClick={ () => { handleDelete(note.id); } }>clear</div>\n    </div>\n  );\n}\n\nNote.propTypes = {\n  note: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport NewNoteForm from './NewNoteForm';\nimport Note from './Note';\n\nexport default class Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n    };\n    this.URL = 'https://react6-2-server.herokuapp.com/notes';\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2>Notes <span className='material-icons refresh' onClick={this.getNotes()}>autorenew</span></h2>\n        <div className='list-notes'>\n          {this.state.notes.map((item) => (\n            <Note key={item.id} note={item} onDelete={this.handleDelete} />\n          ))}\n        </div>\n        <NewNoteForm onFormSubmit={this.handleSbmit} />\n      </React.Fragment>\n    );\n  }\n\n  handleDelete = (id) => {\n    fetch(`${this.URL}/${id}`, {\n      method: 'DELETE',\n    })\n      .then(() => this.getNotes());\n  }\n\n  handleSbmit = (newNote) => {\n    fetch(this.URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(() => this.getNotes());\n  }\n\n  getNotes = () => {\n    fetch(this.URL)\n      .then((response) => response.json())\n      .then((result) => {\n        this.setState({ notes: result });\n      });\n  }\n\n  componentDidMount() {\n    this.getNotes();\n  }\n}","import React from 'react';\nimport './App.css';\nimport Notes from './component/Notes';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <Notes />\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}